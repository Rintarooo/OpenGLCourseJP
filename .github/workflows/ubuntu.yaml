name: Ubuntu CI

on:
  push:
    branches:
      - master
      - dev

env:
  BUILD_TYPE: Release
  GNU_CC: gcc-10
  GNU_CXX: g++-10
  LLVM_CC: clang-11
  LLVM_CXX: clang++-11

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [gcc, clang]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.MY_PAT }}

      - name: Install GNU C/C++ Compiler
        if: ${{ matrix.compiler == 'gcc' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y $GNU_CC $GNU_CXX

      - name: Install LLVM Clang
        if: ${{ matrix.compiler == 'clang' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y $LLVM_CC $LLVM_CXX

      - name: Install OpenGL envs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libglu1-mesa-dev mesa-common-dev
          sudo apt-get install -y libxmu-dev libxi-dev libxrandr-dev libxinerama-dev libxcursor-dev

      - name: Install GLFW3
        run: |
          git clone https://github.com/glfw/glfw.git
          cd glfw && git checkout 3.3.4
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make -j2 && sudo make install

      - name: Install GLM
        run: |
          git clone https://github.com/g-truc/glm.git
          cd glm && git checkout 0.9.9.8
          sudo cp -R glm /usr/local/include

      - name: CMake Build
        env:
          C_COMPILER: ${{ matrix.compiler }}
        run: |
          cmake -E make_directory ${{runner.workspace}}/build
          cd ${{runner.workspace}}/build
          if [ "$C_COMPILER" = "gcc" ]; then
            cmake $GITHUB_WORKSPACE \
              -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
              -DCMAKE_C_COMPILER=$GNU_CC \
              -DCMAKE_CXX_COMPILER=$GNU_CXX
          fi
          if [ "$C_COMPILER" = "clang" ]; then
            cmake $GITHUB_WORKSPACE \
              -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
              -DCMAKE_C_COMPILER=$LLVM_CC \
              -DCMAKE_CXX_COMPILER=$LLVM_CXX
          fi
          cmake --build . --config $BUILD_TYPE --parallel 2
